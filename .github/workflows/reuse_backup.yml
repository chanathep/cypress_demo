name: Backup Repo

on:
  push:
    branches:
      - main
  workflow_call:
    secrets:
      PAT_GITHUB:
        required: true
      PAT_USER:
        required: true

jobs:
  backup:
    name: backup
    runs-on: ubuntu-latest
    # runs-on: [self-hosted, linux, x64]
    steps:

      # - name: Clean up old temp folder
      #   run: docker run -v "$(pwd):/usr/src" sonarsource/sonar-scanner-cli rm -rf .scannerwork .sonarqube */bin */obj

      # - uses: actions/checkout@v4
      #   with:
      #     token: ${{ secrets.TOKEN_KEY }}
      #     submodules: "recursive"


      - name: Clone Repository
        # run: git clone --mirror ${{ github.repository }} /tmp/repo
        run: |
          mkdir repo
          cd repo
          pwd
          ls -la
          git clone --mirror https://${{ secrets.PAT_USER }}:${{ secrets.PAT_GITHUB }}@github.com/${{ github.repository }}.git
          ls -la

      - name: Create tar
        run: |
          cd repo
          pwd
          ls -la
          tar -czf ${{ github.event.repository.name }}.tar.gz ${{ github.event.repository.name }}.git
          ls -la
          cd ..
          mkdir repo2
          cd repo2
          tar -xzf ../repo/${{ github.event.repository.name }}.tar.gz
          ls -la
          mv ${{ github.event.repository.name }}.tar.gz /home/ubuntu/github/${{ github.event.repository.name }}.tar.gz
          ls -la /home/ubuntu/github
          # ping -c 1 git.freewillgroup.com
          # git archive --format=tar.gz --prefix=my-repo/ HEAD > my-repo.tar.gz
          # gzip -d my-repo.tar.gz
          # mv my-repo.tar my-repo.zip

      # - name: List Zipped File Contents
      #   run: unzip -l /tmp/repo/my-repo.zip

      # - name: Clean up old temp folder
      #   run: docker run -v "$(pwd):/usr/src" sonarsource/sonar-scanner-cli rm -rf .scannerwork .sonarqube */bin */obj
